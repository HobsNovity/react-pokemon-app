{"version":3,"sources":["helpers/format-date.ts","helpers/format-type.ts","models/mock-pokemon.ts","services/pokemon-service.ts","components/loader.tsx","pages/pokemon-detail.tsx","components/pokemon-card.tsx","hooks/pokemon.hook.ts","components/pokemon-search.tsx","pages/pokemon-list.tsx","pages/page-not-found.tsx","components/pokemon-form.tsx","pages/pokemon-edit.tsx","models/pokemon.ts","pages/pokemon-add.tsx","services/authentication-service.ts","pages/login.tsx","PrivateRoute.tsx","App.tsx","index.tsx"],"names":["formatDate","date","Date","getDate","getMonth","getFullYear","formatType","type","color","POKEMONS","id","name","hp","cp","picture","types","created","PokemonService","this","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","data","isEmpty","find","pokemon","method","body","JSON","stringify","headers","index","findIndex","filter","push","term","includes","Object","keys","length","console","process","Loader","className","PokemonsDetail","match","useState","setPokemon","useEffect","getPokemon","params","src","alt","style","width","margin","to","map","key","PokemonCard","borderColor","setColor","history","useHistory","onClick","onMouseEnter","onMouseLeave","transition","usePokemons","setPokemons","isLoading","setIsLoading","getPokemons","finally","PokemonSearch","setTerm","placeholder","value","onChange","e","target","searchPokemon","handleInputChange","PokemonList","position","bottom","right","PageNotFound","PokemonForm","isEditForm","isValid","form","setForm","hasType","fieldName","fieldValue","newField","isAddForm","isTypesValid","handleSubmit","preventDefault","log","newForm","startsWith","endsWith","test","validateForm","updatePokemon","addPokemon","onSubmit","deletePokemon","htmlFor","marginBottom","checked","concat","currentType","selectType","disabled","PokemonEdit","Pokemon","PokemonAdd","getTime","username","password","isAuthenticated","setTimeout","Login","message","setMessage","AuthenticationService","login","PrivateRoute","Component","component","rest","render","props","pathname","App","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d441895f.chunk.js","sourcesContent":["const formatDate = (date: Date = new Date()): string => {\r\n  return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n}\r\n\r\nexport default formatDate;","const formatType = (type: string): string => {\r\n  let color: string;\r\n \r\n  switch (type) {\r\n    case 'Feu': \r\n      color = 'red lighten-1'; \r\n      break; \r\n    case 'Eau': \r\n      color = 'blue lighten-1'; \r\n      break; \r\n    case 'Plante': \r\n      color = 'green lighten-1'; \r\n      break; \r\n    case 'Insecte': \r\n      color = 'brown lighten-1'; \r\n      break; \r\n    case 'Normal': \r\n      color = 'grey lighten-3'; \r\n      break; \r\n    case 'Vol': \r\n      color = 'blue lighten-3'; \r\n      break; \r\n    case 'Poison': \r\n      color = 'deep-purple accent-1'; \r\n      break; \r\n    case 'Fée': \r\n      color = 'pink lighten-4'; \r\n      break; \r\n    case 'Psy': \r\n      color = 'deep-purple darken-2'; \r\n      break; \r\n    case 'Electrik': \r\n      color = 'lime accent-1'; \r\n      break; \r\n    case 'Combat': \r\n      color = 'deep-orange'; \r\n      break; \r\n    default: \r\n      color = 'grey'; \r\n      break; \r\n  }\r\n \r\n  return `chip ${color}`;\r\n}\r\n\r\nexport default formatType;","import Pokemon from './pokemon';\r\n   \r\nexport const POKEMONS: Pokemon[] = [\r\n {\r\n  id: 1,\r\n  name: \"Bulbizarre\",\r\n  hp: 25,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\r\n  types: [\"Plante\", \"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 2,\r\n  name: \"Salamèche\",\r\n  hp: 28,\r\n  cp: 6,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\r\n  types: [\"Feu\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 3,\r\n  name: \"Carapuce\",\r\n  hp: 21,\r\n  cp: 4,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\r\n  types: [\"Eau\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 4,\r\n  name: \"Aspicot\",\r\n  hp: 16,\r\n  cp: 2,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\r\n  types: [\"Insecte\", \"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 5,\r\n  name: \"Roucool\",\r\n  hp: 30,\r\n  cp: 7,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\r\n  types: [\"Normal\", \"Vol\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 6,\r\n  name: \"Rattata\",\r\n  hp: 18,\r\n  cp: 6,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\r\n  types: [\"Normal\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 7,\r\n  name: \"Piafabec\",\r\n  hp: 14,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\r\n  types: [\"Normal\", \"Vol\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 8,\r\n  name: \"Abo\",\r\n  hp: 16,\r\n  cp: 4,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\r\n  types: [\"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 9,\r\n  name: \"Pikachu\",\r\n  hp: 21,\r\n  cp: 7,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\r\n  types: [\"Electrik\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 10,\r\n  name: \"Sabelette\",\r\n  hp: 19,\r\n  cp: 3,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\r\n  types: [\"Normal\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 11,\r\n  name: \"Mélofée\",\r\n  hp: 25,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\r\n  types: [\"Fée\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 12,\r\n  name: \"Groupix\",\r\n  hp: 17,\r\n  cp: 8,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\r\n  types: [\"Feu\"],\r\n  created: new Date()\r\n }\r\n];\r\n  \r\nexport default POKEMONS;","import Pokemon from \"../models/pokemon\";\r\nimport POKEMONS from \"../models/mock-pokemon\";\r\n\r\nexport default class PokemonService {\r\n\r\n  static pokemons: Pokemon[] = POKEMONS;\r\n\r\n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\r\n\r\n  static getPokemons(): Promise<Pokemon[]> {\r\n    if (this.isDev) {\r\n      return fetch('http://localhost:3001/pokemons')\r\n        .then(response => response.json())\r\n        .catch(error => this.handleError(error));\r\n    }\r\n\r\n    return new Promise(resolve => {\r\n      resolve(this.pokemons);\r\n    });\r\n  }\r\n\r\n  static getPokemon(id: number): Promise<Pokemon | null> {\r\n    if (this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${id}`)\r\n        .then(response => response.json())\r\n        .then(data => this.isEmpty(data) ? null : data)\r\n        .catch(error => this.handleError(error));\r\n    }\r\n\r\n    return new Promise(resolve => {\r\n      const pokemon = this.pokemons.find(pokemon => id === pokemon.id)\r\n      resolve(pokemon || null);\r\n    });\r\n  }\r\n\r\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n    if (this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(pokemon),\r\n        headers: { 'Content-Type': 'application/json' }\r\n      })\r\n        .then(response => response.json())\r\n        .catch(error => this.handleError(error));\r\n    }\r\n\r\n    return new Promise(resolve => {\r\n      const { id } = pokemon;\r\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\r\n      this.pokemons[index] = pokemon;\r\n      resolve(pokemon);\r\n    });\r\n  }\r\n\r\n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\r\n    if (this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json' }\r\n      })\r\n        .then(response => response.json())\r\n        .catch(error => this.handleError(error));\r\n    }\r\n\r\n    return new Promise(resolve => {\r\n      const { id } = pokemon;\r\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\r\n      resolve({});\r\n    });\r\n  }\r\n\r\n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n    pokemon.created = new Date();\r\n\r\n    if (this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(pokemon),\r\n        headers: { 'Content-Type': 'application/json' }\r\n      })\r\n        .then(response => response.json())\r\n        .catch(error => this.handleError(error));\r\n    }\r\n\r\n    return new Promise(resolve => {\r\n      this.pokemons.push(pokemon);\r\n      resolve(pokemon);\r\n    });\r\n  }\r\n\r\n  static searchPokemon(term: string): Promise<Pokemon[]> {\r\n    if (this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\r\n        .then(response => response.json())\r\n        .catch(error => this.handleError(error));\r\n    }\r\n\r\n    return new Promise(resolve => {\r\n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\r\n      resolve(results);\r\n    });\r\n\r\n  }\r\n\r\n  static isEmpty(data: Object): boolean {\r\n    return Object.keys(data).length === 0;\r\n  }\r\n\r\n  static handleError(error: Error): void {\r\n    console.error(error);\r\n  }\r\n}","import React, { FunctionComponent } from 'react';\r\n\r\nconst Loader: FunctionComponent = () => {\r\n\r\n  return (\r\n    <div className=\"preloader-wrapper big active\">\r\n      <div className=\"spinner-layer spinner-blue\">\r\n        <div className=\"circle-clipper left\">\r\n          <div className=\"circle\"></div>\r\n        </div>\r\n        <div className=\"gap-patch\">\r\n          <div className=\"circle\"></div>\r\n        </div><div className=\"circle-clipper right\">\r\n          <div className=\"circle\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { RouteComponentProps, Link } from 'react-router-dom';\r\nimport Pokemon from '../models/pokemon';\r\nimport formatDate from '../helpers/format-date';\r\nimport formatType from '../helpers/format-type';\r\nimport PokemonService from '../services/pokemon-service';\r\nimport Loader from '../components/loader';\r\n\r\ntype Params = { id: string };\r\n\r\nconst PokemonsDetail: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\r\n\r\n  const [pokemon, setPokemon] = useState<Pokemon | null>(null);\r\n\r\n  useEffect(() => {\r\n    PokemonService.getPokemon(+match.params.id)\r\n      .then((pokemon) => {\r\n        setPokemon(pokemon)\r\n      });\r\n  }, [match.params.id]);\r\n\r\n  return (\r\n    <div>\r\n      {pokemon ? (\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m8 offset-m2\">\r\n            <h2 className=\"header center\">{pokemon.name}</h2>\r\n            <div className=\"card hoverable\">\r\n              <div className=\"card-image\">\r\n                <img src={pokemon.picture} alt={pokemon.name} style={{ width: '250px', margin: '0 auto' }} />\r\n                <Link to={`/pokemons/edit/${pokemon.id}`} className=\"btn btn-floating halfway-fab waves-effect waves-light\">\r\n                  <i className='material-icons'>edit</i>\r\n                </Link>\r\n              </div>\r\n              <div className=\"card-stacked\">\r\n                <div className=\"card-content\">\r\n                  <table className=\"bordered striped\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>Nom</td>\r\n                        <td><strong>{pokemon.name}</strong></td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Points de vie</td>\r\n                        <td><strong>{pokemon.hp}</strong></td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Dégâts</td>\r\n                        <td><strong>{pokemon.cp}</strong></td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Types</td>\r\n                        <td>\r\n                          {pokemon.types.map(type => (\r\n                            <span key={type} className={formatType(type)}>{type}</span>\r\n                          ))}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Date de création</td>\r\n                        <td>{formatDate(pokemon.created)}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div className=\"card-action\">\r\n                  <Link to=\"/\">Retour</Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h4 className=\"center\"><Loader /></h4>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonsDetail;","import React, { FC, useState } from 'react';\r\nimport Pokemon from '../models/pokemon';\r\nimport './pokemon-card.css';\r\nimport formatDate from '../helpers/format-date';\r\nimport formatType from '../helpers/format-type';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\ntype Props = {\r\n  pokemon: Pokemon;\r\n  borderColor?: string;\r\n};\r\n\r\nconst PokemonCard: FC<Props> = ({ pokemon, borderColor = '#009688' }) => {\r\n  const [color, setColor] = useState<string>('');\r\n  const history = useHistory();\r\n\r\n  const showBorder = () => {\r\n    setColor(borderColor);\r\n  }\r\n\r\n  const hideBorder = () => {\r\n    setColor('#f5f5f5');\r\n  }\r\n\r\n  const goToPokemon = (id: number) => {\r\n    history.push(`/pokemons/${id}`)\r\n  }\r\n\r\n  return (\r\n    <div className=\"col s6 m4\" onClick={() => goToPokemon(pokemon.id)} onMouseEnter={showBorder} onMouseLeave={hideBorder}>\r\n      <div className=\"card horizontal\" style={{\r\n        borderColor: color,\r\n        transition: 'ease-in 0.25s'\r\n      }}>\r\n        <div className=\"card-image\">\r\n          <img src={pokemon.picture} alt={pokemon.name} />\r\n        </div>\r\n        <div className=\"card-stacked\">\r\n          <div className=\"card-content\">\r\n            <p>{pokemon.name}</p>\r\n            <p><small>{formatDate(pokemon.created)}</small></p>\r\n            {pokemon.types.map(type => (\r\n              <span key={type} className={formatType(type)}>{type}</span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonCard;","import React, { useState, useEffect } from 'react';\r\nimport Pokemon from '../models/pokemon';\r\nimport PokemonService from '../services/pokemon-service';\r\n\r\nconst usePokemons = () => {\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    PokemonService.getPokemons()\r\n      .then((pokemons) => {\r\n        setPokemons(pokemons);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return {\r\n    isLoading,\r\n    pokemons,\r\n  }\r\n}\r\n\r\nexport default usePokemons;","import React, { FunctionComponent, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Pokemon from '../models/pokemon';\r\nimport PokemonService from '../services/pokemon-service';\r\n\r\nconst PokemonSearch: FunctionComponent = () => {\r\n\r\n  const [term, setTerm] = useState<string>('');\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const term = e.target.value;\r\n    setTerm(term);\r\n\r\n    if (term.length <= 1) {\r\n      setPokemons([]);\r\n      return;\r\n    }\r\n\r\n    PokemonService.searchPokemon(term).then(pokemons => setPokemons(pokemons));\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s12 m6 offset-m3\">\r\n        <div className=\"card\">\r\n          <div className=\"card-content\">\r\n            <div className=\"input-field\">\r\n              <input type=\"text\" placeholder=\"Rechercher un pokémon\" value={term} onChange={e => handleInputChange(e)} />\r\n            </div>\r\n            <div className='collection'>\r\n              {pokemons.map((pokemon) => (\r\n                <Link key={pokemon.id} to={`/pokemons/${pokemon.id}`} className=\"collection-item\">\r\n                  {pokemon.name}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonSearch;","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport PokemonCard from '../components/pokemon-card';\r\nimport usePokemons from '../hooks/pokemon.hook';\r\nimport { Link } from 'react-router-dom';\r\nimport PokemonSearch from '../components/pokemon-search';\r\nimport Loader from '../components/loader';\r\n\r\nconst PokemonList: FunctionComponent = () => {\r\n  const {\r\n    isLoading,\r\n    pokemons,\r\n  } = usePokemons();\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"center\">Pokédex</h1>\r\n      <div className=\"container\">\r\n        {\r\n          pokemons.length === 0 && !isLoading && (\r\n            <p className='center'>Aucun pokemon n'est actuellement disponible dans votre Pokédex!<br />Veuillez ajouter votre premier Pokémon!</p>\r\n          )\r\n        }\r\n        {\r\n          pokemons.length > 0 && !isLoading && (\r\n            <div className=\"row\">\r\n              <PokemonSearch />\r\n              {pokemons.map(pokemon => (\r\n                <PokemonCard key={pokemon.id} pokemon={pokemon} />\r\n              ))}\r\n            </div>\r\n          )\r\n        }\r\n        {\r\n          isLoading && (\r\n            <div className='center'>\r\n              <Loader />\r\n            </div>\r\n          )\r\n        }\r\n        <Link\r\n          to=\"/pokemon/add\"\r\n          className='btn-floating btn-large wave-effect wave-light red z-depth-3'\r\n          style={{ position: 'fixed', bottom: 25, right: 25 }}\r\n        >\r\n          <i className=\"material-icons\">add</i>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonList;","import React, { FunctionComponent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n  \r\nconst PageNotFound: FunctionComponent = () => {\r\n  \r\n  return (\r\n    <div className=\"center\">\r\n      <img src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\" alt=\"Page non trouvée\"/>\r\n      <h1>Hey, cette page n'existe pas !</h1> \r\n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\r\n        Retourner à l'accueil\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PageNotFound;","import React, { FunctionComponent, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Pokemon from '../models/pokemon';\r\nimport formatType from '../helpers/format-type';\r\nimport PokemonService from '../services/pokemon-service';\r\n\r\ntype Props = {\r\n  pokemon: Pokemon,\r\n  isEditForm?: boolean\r\n};\r\n\r\ntype Field = {\r\n  value?: any;\r\n  error?: string,\r\n  isValid?: boolean\r\n}\r\n\r\ntype Form = {\r\n  picture: Field,\r\n  name: Field;\r\n  hp: Field,\r\n  cp: Field,\r\n  types: Field,\r\n}\r\n\r\nconst PokemonForm: FunctionComponent<Props> = ({ pokemon, isEditForm = true }) => {\r\n\r\n  const [form, setForm] = useState<Form>({\r\n    picture: { value: pokemon.picture },\r\n    name: { value: pokemon.name, isValid: true },\r\n    hp: { value: pokemon.hp, isValid: true },\r\n    cp: { value: pokemon.cp, isValid: true },\r\n    types: { value: pokemon.types, isValid: true },\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const types: string[] = [\r\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\r\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\r\n  ];\r\n\r\n  const hasType = (type: string): boolean => {\r\n    return form.types.value.includes(type);\r\n  }\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const fieldName: string = e.target.name;\r\n    const fieldValue: string = e.target.value;\r\n    const newField: Field = { [fieldName]: { value: fieldValue } };\r\n\r\n    setForm({ ...form, ...newField });\r\n  }\r\n\r\n  const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const checked = e.target.checked;\r\n    let newField: Field;\r\n\r\n    if (checked) {\r\n      // Si l'utilisateur coche un type, à l'ajoute à la liste des types du pokémon.\r\n      const newTypes: string[] = form.types.value.concat([type]);\r\n      newField = { value: newTypes };\r\n    } else {\r\n      // Si l'utilisateur décoche un type, on le retire de la liste des types du pokémon.\r\n      const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\r\n      newField = { value: newTypes };\r\n    }\r\n\r\n    setForm({ ...form, ...{ types: newField } });\r\n  }\r\n\r\n  const validateForm = () => {\r\n    let newForm: Form = form;\r\n\r\n    // Validator url\r\n    if (isAddForm()) {\r\n\r\n      const start = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\r\n      const end = \".png\";\r\n\r\n      if (!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\r\n        const errorMsg: string = 'L\\'url n\\'est pas valide.';\r\n        const newField: Field = { value: form.picture.value, error: errorMsg, isValid: false };\r\n        newForm = { ...newForm, ...{ picture: newField } };\r\n      } else {\r\n        const newField: Field = { value: form.picture.value, error: '', isValid: true };\r\n        newForm = { ...newForm, ...{ picture: newField } };\r\n      }\r\n    }\r\n\r\n    // Validator name\r\n    if (!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\r\n      const errorMsg: string = 'Le nom du pokémon est requis (1-25).';\r\n      const newField: Field = { value: form.name.value, error: errorMsg, isValid: false };\r\n      newForm = { ...newForm, ...{ name: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.name.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ name: newField } };\r\n    }\r\n\r\n    // Validator hp\r\n    if (!/^[0-9]{1,3}$/.test(form.hp.value)) {\r\n      const errorMsg: string = 'Les points de vie du pokémon sont compris entre 0 et 999.';\r\n      const newField: Field = { value: form.hp.value, error: errorMsg, isValid: false };\r\n      newForm = { ...newForm, ...{ hp: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.hp.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ hp: newField } };\r\n    }\r\n\r\n    // Validator cp\r\n    if (!/^[0-9]{1,2}$/.test(form.cp.value)) {\r\n      const errorMsg: string = 'Les dégâts du pokémon sont compris entre 0 et 99';\r\n      const newField: Field = { value: form.cp.value, error: errorMsg, isValid: false };\r\n      newForm = { ...newForm, ...{ cp: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.cp.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ cp: newField } };\r\n    }\r\n\r\n    setForm(newForm);\r\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\r\n  }\r\n\r\n  const isAddForm = (): boolean => {\r\n    return !isEditForm;\r\n  }\r\n\r\n  const isTypesValid = (type: string): boolean => {\r\n    // Cas n°1: Le pokémon a un seul type, qui correspond au type passé en paramètre.\r\n    // Dans ce cas on revoie false, car l'utilisateur ne doit pas pouvoir décoché ce type (sinon le pokémon aurait 0 type, ce qui est interdit)\r\n    if (form.types.value.length === 1 && hasType(type)) {\r\n      return false;\r\n    }\r\n\r\n    // Cas n°1: Le pokémon a au moins 3 types.\r\n    // Dans ce cas il faut empêcher à l'utilisateur de cocher un nouveau type, mais pas de décocher les types existants.\r\n    if (form.types.value.length >= 3 && !hasType(type)) {\r\n      return false;\r\n    }\r\n\r\n    // Après avoir passé les deux tests ci-dessus, on renvoie 'true', \r\n    // c'est-à-dire que l'on autorise l'utilisateur à cocher ou décocher un nouveau type.\r\n    return true;\r\n  }\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    console.log(form);\r\n    const isFormValid = validateForm();\r\n    if (isFormValid) {\r\n      pokemon.picture = form.picture.value;\r\n      pokemon.name = form.name.value;\r\n      pokemon.hp = form.hp.value;\r\n      pokemon.cp = form.cp.value;\r\n      pokemon.types = form.types.value;\r\n      isEditForm ? updatePokemon() : addPokemon();\r\n    }\r\n  }\r\n\r\n  const deletePokemon = () => {\r\n    PokemonService.deletePokemon(pokemon).then(() => history.push('/pokemons'));\r\n  }\r\n\r\n  const updatePokemon = () => {\r\n    PokemonService.updatePokemon(pokemon).then(response => history.push(`/pokemons/${pokemon.id}`));\r\n  }\r\n\r\n  const addPokemon = () => {\r\n    PokemonService.addPokemon(pokemon).then(() => history.push('/pokemons'));\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={e => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\">\r\n            {\r\n              isEditForm && (\r\n                <div className=\"card-image\">\r\n                  <img src={pokemon.picture} alt={pokemon.name} style={{ width: '250px', margin: '0 auto' }} />\r\n                  <span className=\"btn-floating halfway-fab waves-effect waves-light\">\r\n                    <i onClick={deletePokemon} className='material-icons'>delete</i>\r\n                  </span>\r\n                </div>\r\n              )\r\n            }\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                {/* Pokemon picture */}\r\n                {\r\n                  isAddForm() && (\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"name\">Nom</label>\r\n                      <input id=\"picture\" type=\"text\" name=\"picture\" className=\"form-control\" value={form.picture.value} onChange={e => handleInputChange(e)}></input>\r\n                      {form.picture.error &&\r\n                        <div className=\"card-panel red accent-1\">{form.picture.error}</div>\r\n                      }\r\n                    </div>\r\n                  )\r\n                }\r\n                {/* Pokemon name */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Nom</label>\r\n                  <input id=\"name\" type=\"text\" name=\"name\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\r\n                  {form.name.error &&\r\n                    <div className=\"card-panel red accent-1\">{form.name.error}</div>\r\n                  }\r\n                </div>\r\n                {/* Pokemon hp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"hp\">Point de vie</label>\r\n                  <input id=\"hp\" type=\"number\" name=\"hp\" className=\"form-control\" value={form.hp.value} onChange={e => handleInputChange(e)}></input>\r\n                  {form.hp.error &&\r\n                    <div className=\"card-panel red accent-1\">{form.hp.error}</div>\r\n                  }\r\n                </div>\r\n                {/* Pokemon cp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"cp\">Dégâts</label>\r\n                  <input id=\"cp\" type=\"number\" name=\"cp\" className=\"form-control\" value={form.cp.value} onChange={e => handleInputChange(e)}></input>\r\n                  {form.cp.error &&\r\n                    <div className=\"card-panel red accent-1\">{form.cp.error}</div>\r\n                  }\r\n                </div>\r\n                {/* Pokemon types */}\r\n                <div className=\"form-group\">\r\n                  <label>Types</label>\r\n                  {types.map(type => (\r\n                    <div key={type} style={{ marginBottom: '10px' }}>\r\n                      <label>\r\n                        <input id={type} type=\"checkbox\" className=\"filled-in\" checked={hasType(type)} onChange={e => selectType(type, e)} value={type} disabled={!isTypesValid(type)}></input>\r\n                        <span>\r\n                          <p className={formatType(type)}>{type}</p>\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">Valider</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PokemonForm;","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport Loader from '../components/loader';\r\nimport PokemonForm from '../components/pokemon-form';\r\nimport Pokemon from '../models/pokemon';\r\nimport PokemonService from '../services/pokemon-service';\r\n\r\ntype Params = { id: string };\r\n\r\nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\r\n\r\n  const [pokemon, setPokemon] = useState<Pokemon | null>(null);\r\n\r\n  useEffect(() => {\r\n    PokemonService.getPokemon(+match.params.id)\r\n      .then((pokemon) => {\r\n        setPokemon(pokemon)\r\n      });\r\n  }, [match.params.id]);\r\n\r\n  return (\r\n    <div>\r\n      {pokemon ? (\r\n        <div className=\"row\">\r\n          <h2 className=\"header center\">Éditer {pokemon.name}</h2>\r\n          <PokemonForm pokemon={pokemon}></PokemonForm>\r\n        </div>\r\n      ) : (\r\n        <h4 className=\"center\"><Loader /></h4>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonEdit;","export default class Pokemon {\r\n  // 1. Typage des propiétés d'un pokémon.\r\n  id: number;\r\n  hp: number;\r\n  cp: number;\r\n  name: string;\r\n  picture: string;\r\n  types: Array<string>;\r\n  created?: Date;\r\n   \r\n  // 2. Définition des valeurs par défaut des propriétés d'un pokémon.\r\n  constructor(\r\n   id: number,\r\n   hp: number = 50,\r\n   cp: number = 10,\r\n   name: string = '...',\r\n   picture: string = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/XXX.png',\r\n   types: Array<string> = ['Normal'],\r\n   created: Date = new Date()\r\n  ) {\r\n   // 3. Initialisation des propiétés d'un pokémons.\r\n   this.id = id;\r\n   this.hp = hp;\r\n   this.cp = cp;\r\n   this.name = name;\r\n   this.picture = picture;\r\n   this.types = types;\r\n   this.created = created;\r\n  }\r\n }","import React, { FC, useState} from 'react';\r\nimport PokemonForm from '../components/pokemon-form';\r\nimport Pokemon from '../models/pokemon';\r\n\r\nconst PokemonAdd: FC = () => {\r\n  const [id] = useState<number>(new Date().getTime());\r\n  const [pokemon] = useState<Pokemon>(new Pokemon(id));\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"header\">\r\n        <PokemonForm pokemon={pokemon} isEditForm={false}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PokemonAdd;","export default class PokemonService {\r\n  static isAuthenticated: boolean = false;\r\n\r\n  static login(username: string, password: string): Promise<boolean> {\r\n    const isAuthenticated = (username === 'pikachu' && password === 'pikachu');\r\n\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        this.isAuthenticated = isAuthenticated;\r\n        resolve(isAuthenticated);\r\n      }, 1000);\r\n    })\r\n  }\r\n}","import React, { FunctionComponent, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthenticationService from '../services/authentication-service';\r\n\r\ntype Field = {\r\n  value?: any,\r\n  error?: string,\r\n  isValid?: boolean\r\n};\r\n\r\ntype Form = {\r\n  username: Field,\r\n  password: Field\r\n}\r\n\r\nconst Login: FunctionComponent = () => {\r\n\r\n  const history = useHistory();\r\n\r\n  const [form, setForm] = useState<Form>({\r\n    username: { value: '' },\r\n    password: { value: '' },\r\n  });\r\n\r\n  const [message, setMessage] = useState<string>('Vous êtes déconnecté. (pikachu / pikachu)');\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const fieldName: string = e.target.name;\r\n    const fieldValue: string = e.target.value;\r\n    const newField: Field = { [fieldName]: { value: fieldValue } };\r\n\r\n    setForm({ ...form, ...newField });\r\n  }\r\n\r\n  const validateForm = () => {\r\n    let newForm: Form = form;\r\n\r\n    // Validator username\r\n    if (form.username.value.length < 3) {\r\n      const errorMsg: string = 'Votre prénom doit faire au moins 3 caractères de long.';\r\n      const newField: Field = { value: form.username.value, error: errorMsg, isValid: false };\r\n      newForm = { ...newForm, ...{ username: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.username.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ username: newField } };\r\n    }\r\n\r\n    // Validator password\r\n    if (form.password.value.length < 6) {\r\n      const errorMsg: string = 'Votre mot de passe doit faire au moins 6 caractères de long.';\r\n      const newField: Field = { value: form.password.value, error: errorMsg, isValid: false };\r\n      newForm = { ...newForm, ...{ password: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.password.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ password: newField } };\r\n    }\r\n\r\n    setForm(newForm);\r\n\r\n    return newForm.username.isValid && newForm.password.isValid;\r\n  }\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n    if (isFormValid) {\r\n      setMessage('👉 Tentative de connexion en cours ...');\r\n      AuthenticationService.login(form.username.value, form.password.value).then(isAuthenticated => {\r\n        if (!isAuthenticated) {\r\n          setMessage('🔐 Identifiant ou mot de passe incorrect.');\r\n          return;\r\n        }\r\n        history.push('/pokemons');\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\">\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                {/* Form message */}\r\n                {message && <div className=\"form-group\">\r\n                  <div className=\"card-panel grey lighten-5\">\r\n                    {message}\r\n                  </div>\r\n                </div>}\r\n                {/* Field username */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Identifiant</label>\r\n                  <input id=\"username\" type=\"text\" name=\"username\" className=\"form-control\" value={form.username.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.username.error &&\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.username.error}\r\n                    </div>}\r\n                </div>\r\n                {/* Field password */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Mot de passe</label>\r\n                  <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.password.error &&\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.password.error}\r\n                    </div>}\r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">Valider</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport AuthenticationService from './services/authentication-service';\r\n  \r\nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\r\n  <Route {...rest} render={(props) => {\r\n    const isAuthenticated = AuthenticationService.isAuthenticated;\r\n    if (!isAuthenticated) {    \r\n      return <Redirect to={{ pathname: '/login' }} />\r\n    }\r\n  \r\n    return <Component {...props} />\r\n  }} />\r\n);\r\n  \r\nexport default PrivateRoute;","import React, { FC } from 'react';\r\nimport { Link, Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport PokemonsDetail from './pages/pokemon-detail';\r\nimport PokemonList from './pages/pokemon-list';\r\nimport PageNotFound from './pages/page-not-found';\r\nimport PokemonEdit from './pages/pokemon-edit';\r\nimport PokemonAdd from './pages/pokemon-add';\r\nimport Login from './pages/login';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\nconst App: FC = () => {\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <nav>\r\n          <div className='nav-wrapper teal'>\r\n            <Link to=\"/\" className='brand-logo center'>Pokédex</Link>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n      <Switch>\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <PrivateRoute exact path=\"/\" component={PokemonList} />\r\n        <PrivateRoute exact path=\"/pokemons\" component={PokemonList} />\r\n        <PrivateRoute exact path=\"/pokemon/add\" component={PokemonAdd} />\r\n        <PrivateRoute exact path=\"/pokemons/edit/:id\" component={PokemonEdit} />\r\n        <PrivateRoute exact path=\"/pokemons/:id\" component={PokemonsDetail} />\r\n        <Route component={PageNotFound} />\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App; ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}